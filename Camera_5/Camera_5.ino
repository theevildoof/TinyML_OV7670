/*
  OV767X - Camera Test Pattern

  This sketch waits for the letter 'c' on the Serial Monitor,
  it then reads a frame from the OmniVision OV7670 camera and 
  prints the data to the Serial Monitor as a hex string.

  The website https://rawpixels.net - can be used the visualize the data:
    width: 176
    height: 144
    RGB565
    Little Endian

  Circuit:
    - Arduino Nano 33 BLE board
    - OV7670 camera module:
      - 3.3 connected to 3.3
      - GND connected GND
      - SIOC connected to A5
      - SIOD connected to A4
      - VSYNC connected to 8
      - HREF connected to A1
      - PCLK connected to A0
      - XCLK connected to 9
      - D7 connected to 4
      - D6 connected to 6
      - D5 connected to 5
      - D4 connected to 3
      - D3 connected to 2
      - D2 connected to 0 / RX
      - D1 connected to 1 / TX
      - D0 connected to 10

  This example code is in the public domain.
*/

#include <Arduino_OV767X.h>

uint16_t pixels[176 * 144]= {0x0D2A,0xED29,0xED29,0xED29,0xEC21,0xED29,0xED29,0xEC29,0xEC29,0x0D32,0xCC29,0xCC29,0xAC29,0xAC29,0xAC29,0xCC29,0xCC29,0xAB29,0xCB29,0xCB29,0xAB29,0x8B29,0xCC31,0x2C3A,0xEF52,0x505B,0xD26B,0x327C,0xED29,0x0D2A,0x0D2A,0x0D2A,0xED21,0xCD29,0xCD29,0xCD29,0xCD29,0xED29,0xCC29,0xEC29,0xEC29,0xEC29,0xCC29,0xAC29,0xCC29,0xCB29,0xCB29,0xCB29,0xCB29,0xEC31,0xF052,0xEE52,0x9163,0xF173,0x537C,0x938C,0xED29,0x0D2A,0xED29,0x0E2A,0xED21,0xCD21,0xCD29,0xED29,0xED29,0xEC29,0xEC29,0xEC29,0xEC29,0xED29,0xED29,0xCC29,0xCC29,0xCC29,0xCC29,0xCC29,0xEC29,0xEE39,0x7042,0x3263,0x936B,0x337C,0x748C,0x149D,0x0E32,0x0D2A,0x0D2A,0xCD21,0xED29,0xCD21,0xED21,0xEC29,0xEC29,0xEC31,0xEC31,0xEC29,0x0C2A,0xED31,0xED31,0xCC31,0xCC31,0xEB29,0xEC29,0xCC31,0x0E3A,0x704A,0x125B,0xB473,0x157C,0x938C,0xD494,0x55A5,0x0E2A,0xED29,0xED29,0xED31,0xCD29,0xED29,0xED29,0x0C2A,0xEC29,0xED31,0xED31,0x2D3A,0xEC31,0x0C32,0x0D32,0xED31,0xCC31,0xEC31,0xEC31,0xCD31,0x6F42,0xAF52,0x7163,0x1274,0x7484,0x159D,0x56A5,0x55A5,0x0F32,0xCE31,0xCE31,0xED31,0xED29,0xEC29,0xEC29,0xEC29,0xED29,0xED31,0xED31,0xEC31,0x4D3A,0x4D32,0x2D32,0x0D32,0xEC31,0x0D32,0x0D32,0xED31,0x8F42,0xF05A,0x936B,0x127C,0xD594,0x559D,0x559D,0x55A5,0xEE29,0xCE29,0xCD29,0xEC29,0xEC29,0xEC29,0xEC29,0xCD29,0xCD29,0xED29,0x0D2A,0x6E3A,0x2D32,0x2C32,0x2C32,0x2D32,0xEC29,0x0D32,0x0D32,0x2E3A,0xB04A,0x715B,0xF473,0x7384,0x359D,0x559D,0x559D,0x55A5,0xCF29,0xED29,0xED29,0xEC29,0xEC29,0xCC29,0xCC29,0xCD31,0xCD31,0xEC29,0x2D32,0xEC31,0xEC31,0xEB31,0x0B32,0x0B32,0x0B2A,0x0C2A,0x0C2A,0x2E3A,0xB042,0x7163,0x1474,0xD48C,0x3595,0x359D,0x359D,0x349D,0xCF29,0xCE29,0xCE29,0xEC29,0xEC29,0xEC29,0xEC29,0xCC31,0xCC31,0xEC29,0x0C32,0xED31,0xED31,0xCB31,0x0C3A,0x0B32,0x0A32,0xEB29,0x2C32,0xCF42,0x5053,0xD26B,0x337C,0xD594,0x1595,0x359D,0x159D,0x349D,0xEE29,0xCE29,0xCE29,0xCD29,0xAD29,0xCC29,0xAC29,0xCC29,0xCC29,0xEC29,0x0C2A,0x0C2A,0x0C2A,0xCB31,0x0C32,0x2B32,0xEA29,0xCB29,0x0C32,0x8D42,0x3053,0xD273,0x537C,0xD494,0x159D,0x349D,0x349D,0x349D,0xCD31,0xCC31,0xCD31,0xCD31,0xAC29,0xAB21,0xCC29,0xCC29,0xCC29,0xEC29,0x0C2A,0x0C2A,0xEB29,0xEB29,0xCB29,0xCB29,0xEB29,0xCB29,0x0C32,0x8E42,0x515B,0xD373,0x7584,0x149D,0x359D,0x349D,0x349D,0x349D,0x0E32,0xEC31,0xCC29,0xCC31,0xCC31,0xEC29,0xEC29,0xEC29,0xEC29,0x0C2A,0x0C2A,0x0C2A,0xEC29,0xEC29,0xEC29,0xEC29,0xEB29,0xAB29,0x0C32,0x8F4A,0x3163,0x147C,0xB794,0x559D,0x55A5,0x74A5,0x74A5,0x54A5,0xEC31,0xCC29,0xCC31,0xCC31,0xCC31,0xCC29,0xCC29,0xCC29,0xEC29,0xEC29,0x0C2A,0x0C2A,0x0C2A,0xEC29,0xEC29,0xEC29,0xEC29,0xAB29,0xAF42,0x8D42,0x7163,0x147C,0xD794,0x55A5,0x55A5,0x74A5,0x54A5,0x54A5,0xED31,0xED31,0xCD31,0xCC29,0xCC29,0xCC29,0xCC29,0xEB29,0xEC29,0xCB29,0xEB29,0xEC29,0xEC31,0xEC29,0xEC29,0xCC29,0xCC29,0xAB29,0xEC31,0x8E4A,0x726B,0x337C,0xF694,0x75A5,0x75A5,0x74AD,0x74AD,0x74A5,0x0D32,0xED31,0xED31,0xEC29,0xCC29,0xCC21,0xEC29,0xEC29,0xEC29,0xCB29,0xCC31,0xEC29,0xEC31,0xEC29,0xEC29,0xEC31,0x2D3A,0xCB29,0x0C32,0xD05A,0xB373,0x3384,0xF69C,0x55A5,0x75A5,0x74A5,0x74AD,0x74A5,0xEE31,0xED31,0xCC29,0xEC29,0xEC29,0xED21,0xCC21,0xCC21,0xCC21,0xEC29,0xCC29,0xAB29,0xAB29,0x0C32,0xCC29,0xCB29,0xAB29,0xEC39,0x6E4A,0xF05A,0x7273,0x5484,0x179D,0x35A5,0x55A5,0x75AD,0x74A5,0x74A5,0xED31,0x0C32,0x2D32,0xEC29,0xEC29,0xCC21,0xCC21,0xCC21,0xCC21,0xCB21,0xEB21,0xCC31,0xCC31,0xCB29,0xCB29,0xCC31,0xAB29,0x0D42,0x6F4A,0x306B,0x1484,0x738C,0x36A5,0x55A5,0x55A5,0x75A5,0x75A5,0x54A5,0xCD39,0x0C32,0x0C32,0xCB29,0xCB29,0xAC29,0xCC29,0xAD29,0xAD29,0xCD21,0xCD21,0xCC29,0xCC29,0xCB29,0xCB29,0xCC31,0xEC31,0x6D42,0xEF52,0xB173,0x5384,0xB494,0x36A5,0x75A5,0x75A5,0x75A5,0x75A5,0x75A5,0x0D32,0x0D32,0x0D32,0xCC29,0xCC29,0xCC29,0xCC29,0xAD29,0xAD29,0xCD29,0xCD29,0xCC29,0xCC29,0xCC29,0xCC31,0xCB29,0x0C3A,0xCF4A,0x515B,0xF273,0xB58C,0x159D,0x56A5,0x75A5,0x75A5,0x75A5,0x75A5,0x75A5,0x0D32,0xED29,0x0D32,0xEC29,0xEB29,0xCC29,0xCC29,0xAC29,0xAC29,0xAB29,0xEC29,0xCB29,0xCB29,0xAB29,0xCB29,0xCC31,0x4E42,0xEF52,0x9263,0xF37B,0xB694,0x359D,0x56A5,0x75A5,0x75A5,0x75AD,0x75A5,0x75A5,0xCD31,0x0D32,0xCC29,0xEB29,0xCB29,0xCC29,0xCB29,0xCD29,0xCD29,0xCD29,0xAC29,0xEB29,0xEB29,0xEC31,0x0C32,0xEC31,0xAF4A,0x105B,0xD373,0x5384,0xF59C,0x55A5,0x96A5,0x95A5,0x75A5,0x75A5,0x55A5,0x55A5,0xAC29,0xCC29,0xCC29,0xCC29,0xCC29,0xCB29,0xCB29,0xCC29,0xCC29,0xCB21,0xEC29,0xEB29,0xCB29,0xCB29,0x0C32,0x0D3A,0xAF52,0x916B,0x337C,0x938C,0x159D,0x75A5,0x96A5,0x95AD,0x95A5,0x75A5,0x75A5,0x54A5,0xCC29,0xCC29,0xCC29,0xCC29,0xCC29,0xCC29,0xCC29,0xAB21,0x0C32,0xEB29,0xEB29,0xEB29,0xEB29,0xEB29,0xEB31,0x6E42,0x315B,0xD273,0x337C,0x359D,0x76A5,0x75A5,0x95A5,0x95AD,0x75AD,0x75A5,0x75A5,0x54A5,0xAC29,0xCB29,0xCB29,0xCC29,0xCC29,0xCC29,0xCC29,0xAB29,0xCB29,0xCA29,0xCB29,0xCB31,0xCB31,0xCB31,0x0C3A,0x6D4A,0x716B,0xF37B,0x758C,0x359D,0x76A5,0x75A5,0x96AD,0x75AD,0x75A5,0x75A5,0x95AD,0x3395,0xCC29,0xCB29,0xCB29,0xCC29,0xCC29,0xCC29,0xCB29,0xCB29,0xCB29,0xCA29,0xCA29,0xCB29,0xCB31,0xCB31,0x2C3A,0x8E4A,0x9273,0x147C,0xF794,0x55A5,0x96A5,0x95AD,0x95AD,0x95AD,0x54A5,0x54A5,0x149D,0xF38C,0xCB29,0xCB29,0xEB29,0xCC29,0xCB29,0xCC29,0xCC29,0xCC29,0xCC29,0xCB29,0xCB29,0xCB29,0xCB29,0xEB31,0x0C3A,0xCF52,0xD373,0x5484,0x379D,0x76A5,0x96A5,0x95AD,0x95AD,0x95AD,0x54A5,0x349D,0xD294,0x9284,0xEC21,0xCB29,0xCB21,0xCB29,0xCB29,0xCC29,0xEC29,0xCB29,0xEB29,0xCA29,0xCA29,0xCC29,0xCC29,0xEC31,0x4E42,0x115B,0xB473,0x748C,0x37A5,0x96A5,0x96A5,0x76AD,0x55A5,0x55A5,0x349D,0x1395,0xD28C,0x717C,0xED29,0xCC29,0xCC21,0xCC29,0xAC29,0xCC29,0xCC29,0xEB21,0xEB29,0xCB29,0xCA29,0xCB29,0xAB29,0xEC31,0x4D3A,0xF052,0xD473,0x948C,0x57A5,0x95A5,0x95A5,0x75A5,0x75A5,0x75A5,0x1495,0xB28C,0x717C,0xCF6B,};
void setup() {
  Serial.begin(9600);
  while (!Serial);

  Serial.println("OV767X Camera Capture");
  Serial.println();

  if (!Camera.begin(QCIF, RGB565, 1)) {
    Serial.println("Failed to initialize camera!");
    while (1);
  }

  Serial.println("Camera settings:");
  Serial.print("\twidth = ");
  Serial.println(Camera.width());
  Serial.print("\theight = ");
  Serial.println(Camera.height());
  Serial.print("\tbits per pixel = ");
  Serial.println(Camera.bitsPerPixel());
  Serial.println();

  Serial.println("Send the 'c' character to read a frame ...");
  Serial.println();
}

void loop() {
  if (Serial.read() == 'c') {
    Serial.println("Reading frame");
    Serial.println();
    //Camera.readFrame(pixels);

    int numPixels = Camera.width() * Camera.height();

    for (int i = 0; i < 28; i++) {
      for(int j =0; j < 28; j++){
       uint16_t pixel = pixels[176*i +j];
       //Serial.println(pixel);
       //Serial.println(pixel,HEX);
       //RGB888 data
       int red   = ((pixel >> 11) & 0x1f) << 3;
       red += 50;
       int green = ((pixel >> 5) & 0x3f) << 2; 
       green += 50;
       int blue  = ((pixel >> 0) & 0x1f) << 3; 
       blue += 50;
       int grayscale = (red + green + blue)/3;
       //Serial.println(red);
       //Serial.println(green);
       //Serial.println(blue);
       Serial.print(grayscale);
       Serial.print(",");
        
       
        
      }
    }
  }
}
